<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.rnott.samples.microservice</groupId>
  <artifactId>microservice-archetype</artifactId>
  <version>2.0.0.Final</version>
  <packaging>maven-archetype</packaging>

  <name>microservice-archetype</name>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.archetype</groupId>
        <artifactId>archetype-packaging</artifactId>
        <version>3.2.1</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-archetype-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <!--
        Since the artifact resources are built dynamically we need to clean
        these in addition to the default target directory
        -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.3.2</version>
          <configuration>
            <filesets>
             <fileset>
                <directory>${basedir}/src/main/resources/archetype-resources</directory>
                <includes>
                  <include>**/*</include>
                </includes>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
        <!--
        Dynamically copy files from the template directory to archetype resources. This needs
        to be performed in steps so that we can rename path segments to those required by the
        archetype plugin. Specifically, we want to rename org/rnott/example to __artifactId__
        so that you can use your own package name when using the archetype. This requires us
        to use multiple executions.
        -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
          <executions>
            <execution>
              <id>copy-resources</id>
              <phase>validate</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <encoding>UTF-8</encoding>
                <outputDirectory>${basedir}/src/main/resources/archetype-resources</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/template</directory>
                    <includes>
                      <include>*</include>
                      <include>api/**</include>
                    </includes>
                    <excludes>
                      <exclude>**/target/**</exclude>
                    </excludes>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>copy-resources-service-main</id>
              <phase>validate</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <encoding>UTF-8</encoding>
                <outputDirectory>${basedir}/src/main/resources/archetype-resources</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/template</directory>
                    <includes>
                      <include>service/*</include>
                      <include>service/src/main/resources/**</include>
                    </includes>
                    <excludes>
                      <exclude>**/target/**</exclude>
                    </excludes>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>copy-resources-service-main-java</id>
              <phase>validate</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <encoding>UTF-8</encoding>
                <outputDirectory>${basedir}/src/main/resources/archetype-resources/service/src/main/java/__artifactId__</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/template/service/src/main/java/org/rnott/example</directory>
                    <excludes>
                      <exclude>**/target/**</exclude>
                    </excludes>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>copy-resources-service-test</id>
              <phase>validate</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <encoding>UTF-8</encoding>
                <outputDirectory>${basedir}/src/main/resources/archetype-resources</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/template</directory>
                    <includes>
                      <include>service/*</include>
                      <include>service/src/test/resources/**</include>
                    </includes>
                    <excludes>
                      <exclude>**/target/**</exclude>
                    </excludes>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>copy-resources-service-test-java</id>
              <phase>validate</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <encoding>UTF-8</encoding>
                <outputDirectory>${basedir}/src/main/resources/archetype-resources/service/src/test/java/__artifactId__</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/template/service/src/test/java/org/rnott/example</directory>
                    <excludes>
                      <exclude>**/target/**</exclude>
                    </excludes>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!--
        Once the files are in place we need to replace some text with Maven property placeholders,
        primarily ${artifactId} so that package and import declarations work as expected.
        -->
        <plugin>
          <groupId>io.github.floverfelt</groupId>
          <artifactId>find-and-replace-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>find-and-replace-code</id>
              <phase>validate</phase>
              <goals>
                <goal>find-and-replace</goal>
              </goals>
              <configuration>
                <replacementType>file-contents</replacementType>
                <baseDir>${basedir}/src/main/resources/archetype-resources/</baseDir>
                <findRegex>org.rnott.example</findRegex>
                <replaceValue>${project.artifactId}</replaceValue>
                <recursive>true</recursive>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
